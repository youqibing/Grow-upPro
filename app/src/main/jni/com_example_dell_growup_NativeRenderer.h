/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_example_dell_growup_NativeRenderer */

#ifndef _Included_com_example_dell_growup_NativeRenderer
#define _Included_com_example_dell_growup_NativeRenderer
#ifdef __cplusplus
extern "C" {
#endif

/**
 * 静态有两个非常重要的关键字JNIEXPORT和JNICALL, 这两个关键字是宏定义, 主要用于说明该函数是JNI函数，
 * 在虚拟机加载so库时, 如果发现函数含有上面两个宏定义时, 就会链接到对应java层的native方法。
 */
JNIEXPORT void JNICALL Java_com_example_dell_growup_NativeRenderer_nativeOnStart(JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_example_dell_growup_NativeRenderer_nativeSetAssetManager(JNIEnv *,jobject, jobject);

JNIEXPORT void JNICALL Java_com_example_dell_growup_NativeRenderer_nativeOnSurfaceCreated(JNIEnv *,jobject, int with, int height);

JNIEXPORT void JNICALL Java_com_example_dell_growup_NativeRenderer_nativeOnRender(JNIEnv * , jobject );

JNIEXPORT void JNICALL Java_com_example_dell_growup_NativeRenderer_nativeOnPause(JNIEnv * , jobject);

JNIEXPORT void JNICALL Java_com_example_dell_growup_NativeRenderer_nativeOnResume(JNIEnv * , jobject);

JNIEXPORT void JNICALL Java_com_example_dell_growup_NativeRenderer_nativeOnDestroy(JNIEnv * , jobject);

#ifdef __cplusplus
}
#endif
#endif
